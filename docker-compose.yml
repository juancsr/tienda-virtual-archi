version: '3'

services:
  # The load balancer
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    restart: on-failure:5
    depends_on:
      - api_clientes
      - api_pedidos
      # - api_productos
    
  api_clientes:
    build: ./api_clientes
    container_name: api_clientes
    image: api_clientes
    restart: on-failure:5
    environment:
      - DB_HOST=prod_mysql
      - DB_USER=${MYSQL_USERNAME}
      - DB_PASSWORD=${MYSQL_PASSWORD}
      - DB_NAME=${MYSQL_DATABASE}
    depends_on:
      - mysql

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: prod_mysql
    healthcheck: 
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10
    environment:
      - MYSQL_USER=${MYSQL_USERNAME}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - "./api_clientes/users.sql:/docker-entrypoint-initdb.d/1.sql"

  api_pedidos:
    build: ./api_pedidos
    container_name: api_pedidos
    depends_on:
      - mongo
      - api_clientes
    environment:
      - API_CLIENTES_URL=http://api_clientes:4000
      - API_PRODUCTOS_URL=https://productos.free.beeceptor.com
      - DB_NAME=${MONGO_INITDB_DATABASE}
      - DB_HOST=prod_mongo
      - DB_PORT=27017
      - DB_USERNAME=${MONGO_INITDB_USERNAME}
      - DB_PASSWORD=${MONGO_INITDB_PASSWORD}
      - DB_AUTH=${MONGO_AUTHDB}
      - PORT=4000

  mongo:
    image: mongo:latest
    container_name: prod_mongo
    environment:
      - MONGO_DATA_DIR=/data/db:ro
      - MONGO_LOG_DIR=/var/log/mongodb
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
  
  api_productos:
    image: nodejs
    build: ./api_productos
    container_name: api_productos
    restart: always
    ports: 
      - 4000:4000
    command: npm run dev
    depends_on:
      - sqlite3
  sqlite3:
      container_name: sqlite3_container
      image: nouchka/sqlite3:latest
      stdin_open: true
      tty: true
      volumes:
      #Modify following line
          - "./root/db/sql_lite/sqlliteproductos.sql"
      ports:
          - '9001:9001' # expose ports - HOST:CONTAINER
      #restart: unless-stopped
    

