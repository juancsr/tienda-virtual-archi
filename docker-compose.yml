version: '3'

services:
  # The load balancer
  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    restart: on-failure:5
    depends_on:
      - api_clientes
      - api_pedidos
      - api_productos
    
  api_clientes:
    build: ./api_clientes
    container_name: api_clientes
    image: api_clientes
    restart: on-failure:5
    environment:
      - DB_HOST=mysql
      - DB_USER=andres
      - DB_PASSWORD=andres
      - DB_NAME=clientes
    depends_on:
      - mysql

  mysql:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    container_name: mysql
    healthcheck: 
      test: ["CMD", 'mysqladmin', 'ping', '-h', 'localhost', '-u', 'root', '-p$$MYSQL_ROOT_PASSWORD' ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_USER: andres
      MYSQL_PASSWORD: andres
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: clientes
    volumes:
      - "./api_clientes/users.sql:/docker-entrypoint-initdb.d/1.sql"

  api_pedidos:
    build: ./api_pedidos
    container_name: api_pedidos
    depends_on:
      - mongo
      # - api_clientes
      - mysql
    environment:
      - API_CLIENTES_URL=http://api_clientes:4000
      - API_PRODUCTOS_URL=api_productos:5000
      - DB_NAME=pedidos
      - DB_HOST=mongo
      - DB_PORT=27017
      - DB_USERNAME=pedidos
      - DB_PASSWORD=pedidos
      - DB_AUTH=admin

  mongo:
    image: mongo:latest
    container_name: mongo
    environment:
      - MONGO_DATA_DIR=/data/db:ro
      - MONGO_LOG_DIR=/var/log/mongodb
      - MONGO_INITDB_ROOT_USERNAME=pedidos
      - MONGO_INITDB_ROOT_PASSWORD=pedidos
      - MONGO_INITDB_DATABASE=pedidos
  api_productos:
    image: nodejs
    build: ./api_productos
    container_name: api_productos
    ports: 
      - 3000:3000  
    command: npm run dev
    

